---

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - 2.x

name: 🔍 Integration with PostgreSQL

jobs:
  test-pgsql:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - 'ubuntu-latest'
        php-version:
          - '8.1'
          - '8.2'
          - '8.3'
        dependencies:
          - lowest
          - locked
          - highest
        pgsql-version:
          - 13

    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.1

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite, json
          ini-values: error_reporting=E_ALL
          tools: composer:v2, pecl
          coverage: none

      - name: 🛠️ Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@master

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 🗑️ Remove PHP platform configuration
        if: "matrix.dependencies != 'locked'"
        run: composer config platform.php --ansi --unset

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@master
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🧪 Run unit tests with phpunit
        run: php vendor/bin/phpunit --colors=always -testsuite=Unit

      - name: 🧪 Run integration tests with phpunit
        run: php vendor/bin/phpunit --colors=always --testsuite=Cycle DBAL
