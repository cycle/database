---

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - 2.x

name: 🔍 Integration

jobs:
  code-coverage:
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: coverage-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.1'
        dependencies:
          - locked

    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.1

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          tools: composer:v2, pecl
          coverage: xdebug

      - name: 🛠️ Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@master

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@master
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🧪 Collect code coverage with Xdebug and phpunit/phpunit
        env:
          XDEBUG_MODE: coverage
        run: vendor/bin/phpunit --group=driver-sqlite --colors=always --configuration=phpunit.xml --coverage-clover=.build/phpunit/logs/clover.xml

      - name: 📤 Upload code coverage report to Codecov
        uses: codecov/codecov-action@v4.1.1
        with:
          files: .build/phpunit/logs/clover.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  coding-standards:
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: coding-standards-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - "ubuntu-latest"
        php-version:
          - "8.1"
        dependencies:
          - "locked"
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.1

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          tools: composer:v2, pecl
          coverage: xdebug

      - name: 🛠️ Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@master

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@master
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🛠️ Prepare environment
        run: |
          mkdir -p ./.build/php-cs-fixer

      - name: ♻️ Restore php-cs-fixer cache
        uses: actions/cache@v4
        with:
          path: .build/php-cs-fixer
          key: php-${{ matrix.php-version }}-php-cs-fixer-${{ github.ref_name }}
          restore-keys: |
            php-${{ matrix.php-version }}-php-cs-fixer-master
            php-${{ matrix.php-version }}-php-cs-fixer-

      - name: 🚨 Run coding standards task
        run: composer cs:diff
        env:
          PHP_CS_FIXER_IGNORE_ENV: true

  static-analysis:
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: static-analysis-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - "ubuntu-latest"
        php-version:
          - "8.1"
        dependencies:
          - "locked"
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.1

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          tools: composer:v2, pecl
          coverage: xdebug

      - name: 🛠️ Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@master

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@master
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🔍 Run static analysis using psalm
        run: composer psalm:ci

  mutation-testing:
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: mutation-testing-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - "ubuntu-latest"
        php-version:
          - "8.1"
        dependencies:
          - "locked"
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.1

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          tools: composer:v2, pecl
          coverage: xdebug

      - name: 🛠️ Setup problem matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@master

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@master
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🧪 Run mutation testing using Xdebug and infection/infection
        run: composer infection:ci
